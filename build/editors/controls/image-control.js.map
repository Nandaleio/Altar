{"version":3,"file":"image-control.js","sourceRoot":"","sources":["../../../src/editors/controls/image-control.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAClD,OAAO,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;AAC/C,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAG3B,IAAa,YAAY,GAAzB,MAAa,YAAa,SAAQ,YAA+B;IAE1C,iBAAiB,CAAC,EAAqB;QACtD,MAAM,IAAI,KAAK,CAAC,yBAAyB,GAAC,EAAE,CAAE,CAAC;IACnD,CAAC;IAEQ,MAAM;QACX,OAAO,IAAI,CAAA,iBAAiB,GAAG,EAAE,CAAC;IACtC,CAAC;CACJ,CAAA;AATY,YAAY;IADxB,aAAa,CAAC,qBAAqB,CAAC;GACxB,YAAY,CASxB;SATY,YAAY","sourcesContent":["import { customElement } from \"lit/decorators.js\";\r\nimport { AltarControl } from \"./altar-control\";\r\nimport { html } from \"lit\";\r\n\r\n@customElement('altar-image-control')\r\nexport class ImageControl extends AltarControl<HTMLCanvasElement> {\r\n\r\n    protected override setEventListeners(el: HTMLCanvasElement): void {\r\n        throw new Error(\"Method not implemented.\"+el,);\r\n    }\r\n\r\n    override render() {\r\n        return html`Image Control ${0.8}`;\r\n    }\r\n}\r\n\r\ndeclare global {\r\n    interface HTMLElementTagNameMap {\r\n      'altar-image-control': ImageControl;\r\n    }\r\n  }"]}