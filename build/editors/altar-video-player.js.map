{"version":3,"file":"altar-video-player.js","sourceRoot":"","sources":["../../src/editors/altar-video-player.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AAC/B,OAAO,EAAC,aAAa,EAAE,MAAM,mBAAmB,CAAC;AACjD,OAAO,EAAE,gBAAgB,EAAE,MAAM,6BAA6B,CAAC;AAI/D,OAAO,yBAAyB,CAAC;AACjC,OAAO,0BAA0B,CAAC;AAClC,OAAO,kCAAkC,CAAC;AAG1C,IAAa,gBAAgB,GAA7B,MAAa,gBAAiB,SAAQ,gBAA4C;IAEhF,2DAA2D;IAClD,MAAM;QACb,OAAO,IAAI,CAAA;;;;;;;;;;;KAWV,CAAC;IACJ,CAAC;CAkBF,CAAA;AAhBiB,uBAAM,GAAG,GAAG,CAAA;;;;;;;;;;;;;KAc7B,CAAA;AAhCY,gBAAgB;IAD5B,aAAa,CAAC,oBAAoB,CAAC;GACvB,gBAAgB,CAkC5B;SAlCY,gBAAgB","sourcesContent":["import { css, html} from 'lit';\r\nimport {customElement } from 'lit/decorators.js';\r\nimport { AltarMediaPlayer } from './player/altar-media-player';\r\nimport { TimeControl } from './controls/time-control';\r\nimport { AudioControl } from './controls/audio-control';\r\n\r\nimport './controls/time-control';\r\nimport './controls/audio-control';\r\nimport './comments/altar-comment-trigger';\r\n\r\n@customElement('altar-video-player')\r\nexport class AltarVideoPlayer extends AltarMediaPlayer<TimeControl | AudioControl> {\r\n\r\n  //probably need to display the video to a HTMLCanvasElement\r\n  override render() {\r\n    return html`\r\n      <div class=\"main-section\">\r\n        <video id=\"altar-player-element\"></video>\r\n        <div class=\"comment-section\">\r\n          <altar-comment-trigger></altar-comment-trigger>\r\n        </div>\r\n      </div>\r\n      <div class=\"controls-section\">\r\n        <altar-time-control class=\"altar-control-element\"></altar-time-control>\r\n        <altar-audio-control class=\"altar-control-element\"></altar-audio-control>\r\n      </div>\r\n    `;\r\n  }\r\n\r\n  static override styles = css`\r\n    .main-section {\r\n      display: flex;\r\n    }\r\n    .comment-section {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 0.5rem;\r\n    }\r\n    .controls-section {\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n    `\r\n;\r\n\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'altar-video-player': AltarVideoPlayer;\r\n  }\r\n}\r\n"]}