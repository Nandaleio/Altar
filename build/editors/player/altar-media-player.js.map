{"version":3,"file":"altar-media-player.js","sourceRoot":"","sources":["../../../src/editors/player/altar-media-player.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,gBAAgB,CAAC;AAG7C,MAAM,OAAgB,gBAA8C,SAAQ,WAAgC;IAE/F,KAAK,CAAC,YAAY,CAAC,kBAA0C;QAClE,KAAK,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QAEvC,MAAM,EAAE,GAAG,MAAM,IAAI,CAAC,OAAO,CAAA;QAC7B,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;IACvD,CAAC;CAEJ","sourcesContent":["import { PropertyValueMap } from \"lit\";\r\nimport { AltarPlayer } from \"./altar-player\";\r\nimport { AltarControl } from \"../controls/altar-control\";\r\n\r\nexport abstract class AltarMediaPlayer<T extends AltarControl<any>> extends AltarPlayer<HTMLMediaElement, T> {\r\n\r\n    override async firstUpdated(_changedProperties: PropertyValueMap<this>): Promise<void> {\r\n        super.firstUpdated(_changedProperties);\r\n\r\n        const el = await this.element\r\n        el.src = URL.createObjectURL(this.file);\r\n        Array.from(this.controls).map(_ => _.element = el);\r\n    }\r\n\r\n}"]}